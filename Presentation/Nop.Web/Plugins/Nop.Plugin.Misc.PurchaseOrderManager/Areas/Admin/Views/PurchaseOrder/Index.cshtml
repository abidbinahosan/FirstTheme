@using Nop.Plugin.Misc.PurchaseOrderManager.Areas.Admin.Models;
@model PurchaseOrderSearchModel

@{
	Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
	NopHtml.SetActiveMenuItemSystemName("PurchaseOrders");
	ViewBag.PageTitle = T("Admin.PurchaseOrders").Text;

	const string hideSearchBlockAttributeName = "PurchaseOrdersPage.HideSearchBlock";
	var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<div class="content-header clearfix">
	<h1 class="float-left">@T("Admin.PurchaseOrders")</h1>
	<div class="float-right">
		<a asp-action="Create" class="btn btn-primary">
			<i class="fas fa-plus-square"></i> @T("Admin.Common.AddNew")
		</a>
	</div>
</div>

<section class="content">
	<div class="container-fluid">
		<div class="form-horizontal">
			<div class="cards-group">

				<!-- Search Panel -->
				<div class="card card-default card-search">
					<div class="card-body">
						<div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
							<div class="search-text">@T("Admin.Common.Search")</div>
							<div class="icon-search"><i class="fas fa-magnifying-glass" aria-hidden="true"></i></div>
							<div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
						</div>

						<div class="search-body @(hideSearchBlock ? "closed" : "")">
							<div class="row">
								<div class="col-md-6">
									<div class="form-group row">
										<div class="col-md-4">
											<nop-label asp-for="StartDate" asp-resource-key="Admin.PurchaseOrders.List.SearchStartDate" />
										</div>
										<div class="col-md-8">
											<nop-editor asp-for="StartDate" />
										</div>
									</div>
								</div>
								<div class="col-md-6">
									<div class="form-group row">
										<div class="col-md-4">
											<nop-label asp-for="SupplierId" asp-resource-key="Admin.PurchaseOrders.List.SearchSupplier" />
										</div>
										<div class="col-md-8">
											<nop-select asp-for="SupplierId" asp-items="Model.AvailableSuppliers" />
										</div>
									</div>
								</div>
							</div>
							<div class="row">
								<div class="col-md-6">
									<div class="form-group row">
										<div class="col-md-4">
											<nop-label asp-for="EndDate" asp-resource-key="Admin.PurchaseOrders.List.SearchEndDate" />
										</div>
										<div class="col-md-8">
											<nop-editor asp-for="EndDate" />
										</div>
									</div>
								</div>
							</div>
							<div class="row">
								<div class="text-center col-12">
									<button type="button" id="search-purchase-orders" class="btn btn-primary btn-search">
										<i class="fas fa-magnifying-glass"></i> @T("Admin.Common.Search")
									</button>
								</div>
							</div>
						</div>
					</div>
				</div>

				<!-- Grid Panel -->
				<div class="card card-default">
					<div class="card-body">
						@await Html.PartialAsync("Table", new DataTablesModel
 {
	 Name = "purchase-orders-grid",
	 UrlRead = new DataUrl("List", "PurchaseOrderManager", null),
	 SearchButtonId = "search-purchase-orders",
	 Length = Model.PageSize,
	 LengthMenu = Model.AvailablePageSizes,
	 Filters = new List<FilterParameter>
						{
						new FilterParameter(nameof(Model.SupplierId)),
						new FilterParameter(nameof(Model.StartDate)),
						new FilterParameter(nameof(Model.EndDate))
						},
	 ColumnCollection = new List<ColumnProperty>
						{
						new ColumnProperty(nameof(PurchaseOrderModel.Id))
						{
						Title = T("Admin.PurchaseOrders.Fields.Id").Text,
						Width = "50"
						},
						new ColumnProperty(nameof(PurchaseOrderModel.SupplierName))
						{
						Title = T("Admin.PurchaseOrders.Fields.Supplier").Text
						},
						new ColumnProperty(nameof(PurchaseOrderModel.CreatedOnUtc))
						{
						Title = T("Admin.PurchaseOrders.Fields.CreatedOnUtc").Text,
						Render = new RenderDate()
						},
						new ColumnProperty(nameof(PurchaseOrderModel.TotalAmount))
						{
						Title = T("Admin.PurchaseOrders.Fields.TotalAmount").Text,
						Render = new RenderCustom("renderColumnTotalAmount")
						},
						new ColumnProperty(nameof(PurchaseOrderModel.CreatedBy))
						{
						Title = T("Admin.PurchaseOrders.Fields.CreatedBy").Text
						},
						new ColumnProperty(nameof(PurchaseOrderModel.Id))
						{
						Title = T("Admin.Common.View").Text,
						Width = "50",
						ClassName = NopColumnClassDefaults.Button,
						Render = new RenderButtonView(new DataUrl("View"))
						}
						}
 })
					</div>
				</div>
			</div>
		</div>
	</div>
</section>

<script>
	function renderColumnTotalAmount(data, type, row, meta) {
		return '$' + parseFloat(data).toFixed(2);
	}
</script>