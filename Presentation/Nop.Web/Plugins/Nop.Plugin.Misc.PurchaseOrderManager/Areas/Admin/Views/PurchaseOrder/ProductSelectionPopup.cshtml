@model AddSupplierProductSearchModel
@using Nop.Web.Framework.Extensions
@using Nop.Web.Framework.Models.DataTables
@using Microsoft.AspNetCore.Routing

@{
	Layout = "_AdminPopupLayout";
	ViewBag.PageTitle = T("Admin.Catalog.Products.RelatedProducts.AddNew").Text;
}

@if (ViewBag.RefreshPage == true)
{
	<script>
		try { window.opener.document.forms['@(Context.Request.Query["formId"])'].@(Context.Request.Query["btnId"]).click(); }
		catch (e) {}
		window.close();
	</script>
}
else
{
	<form asp-controller="PurchaseOrderManager" asp-action="ProductSelectionPopup" method="post" id="product-selection-form">
		<input type="hidden" asp-for="SupplierId" />

		<div class="content-header clearfix">
			<h1 class="float-left">@T("Admin.Catalog.Products.RelatedProducts.AddNew")</h1>
		</div>

		<section class="content">
			<div class="container-fluid">
				<div class="form-horizontal">
					<div class="cards-group">
						<!-- Search Card -->
						<div class="card card-default card-search card-popup">
							<div class="card-body">
								<div class="row">
									<div class="col-sm-6">
										<div class="form-group row">
											<div class="col-sm-5">
												<nop-label asp-for="SearchProductName" />
											</div>
											<div class="col-sm-7">
												<nop-editor asp-for="SearchProductName" id="SearchProductName" />
											</div>
										</div>
									</div>
								</div>
								<div class="row">
									<div class="col-sm-12">
										<button type="button" id="search-products" class="btn btn-primary btn-search">
											<i class="fas fa-search"></i>
											@T("Admin.Common.Search")
										</button>
									</div>
								</div>
							</div>
						</div>

						<!-- Table Card -->
						<div class="card card-default">
							<div class="card-body">
								@{
									var filters = new List<FilterParameter>();
									if (Model.SearchProductName != null)
									{
										filters.Add(new FilterParameter(nameof(Model.SearchProductName), nameof(Model.SearchProductName)));
									}
								}
								@await Html.PartialAsync("Table", new DataTablesModel
  {
	  Name = "products-grid",
	  UrlRead = new DataUrl("SupplierProductAddPopupList", "PurchaseOrderManager",
							new RouteValueDictionary { ["supplierId"] = Model.SupplierId }),
	  SearchButtonId = "search-products",
	  Length = Model.PageSize,
	  LengthMenu = Model.AvailablePageSizes,
	  Filters = filters,
	  ColumnCollection = new List<ColumnProperty>
							{
							new ColumnProperty(nameof(PurchaseOrderProductModel.ProductId))
							{
							IsMasterCheckBox = true,
							Render = new RenderCheckBox("checkbox_products"),
							ClassName = NopColumnClassDefaults.CenterAll,
							Width = "50"
							},
							new ColumnProperty(nameof(PurchaseOrderProductModel.ProductName))
							{
							Title = T("Admin.Catalog.Products.Fields.Name").Text,
							Render = new RenderCustom("renderProductName")
							},
							new ColumnProperty(nameof(PurchaseOrderProductModel.Sku))
							{
							Title = T("Admin.Catalog.Products.Fields.Sku").Text
							},
							new ColumnProperty(nameof(PurchaseOrderProductModel.Price))
							{
							Title = T("Admin.Catalog.Products.Fields.Price").Text,
							Width = "100"
							},
							new ColumnProperty(nameof(PurchaseOrderProductModel.Published))
							{
							Title = T("Admin.Catalog.Products.Fields.Published").Text,
							Width = "100",
							ClassName = NopColumnClassDefaults.CenterAll,
							Render = new RenderBoolean()
							}
							}
  })
							</div>
							<div class="card-footer">
								<button type="button" id="add-selected-products" class="btn btn-primary">
									<i class="far fa-save"></i>
									@T("Admin.Common.AddSelected")
								</button>
							</div>
						</div>
					</div>
				</div>
			</div>
		</section>
	</form>
}

<script>
	function renderProductName(data, type, row, meta) {
		return '<a href="@Url.Content("~/Admin/Product/Edit/")' + row.ProductId + '">' + data + '</a>';
	}

	$(document).ready(function () {
		// Initialize the search functionality
		$('#search-products').click(function() {
			var grid = $('#products-grid').DataTable(
				{"pageLength": 7});
			grid.ajax.reload();
			return false;
		});

		// Add selected products
		$('#add-selected-products').click(function() {
			var selectedProducts = [];
			var grid = $('#products-grid').DataTable();

			grid.$('input[name="checkbox_products"]:checked').each(function() {
				var row = grid.row($(this).closest('tr'));
				var rowData = row.data();

				selectedProducts.push({
					id: rowData.ProductId,
					name: rowData.ProductName,
					sku: rowData.Sku,
					price: parseFloat(rowData.Price) || 0
				});
			});

			if (selectedProducts.length === 0) {
				alert('@T("Admin.PurchaseOrders.SelectAtLeastOneProduct")');
				return;
			}

			if (window.opener && window.opener.receiveSelectedProducts) {
				window.opener.receiveSelectedProducts(selectedProducts);
				window.close();
			}
		});
	});
</script>