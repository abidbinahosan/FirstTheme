@model Nop.Plugin.Misc.PurchaseOrderManager.Areas.Admin.Models.PurchaseOrderModel
@{
	Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
	ViewBag.PageTitle = T("Admin.PurchaseOrders.Create").Text;
}

<form asp-controller="PurchaseOrderManager" asp-action="Create" method="post" id="create-form">
	<div class="content-header clearfix">
		<h1 class="float-left">@T("Admin.PurchaseOrders.Create")</h1>
	</div>

	<div class="content">
		<div class="form-horizontal">
			<!-- Supplier Dropdown with inline label (without search) -->
			<div class="form-group row align-items-center">
				<label asp-for="SupplierId" class="col-form-label col-md-2 text-right">@T("Admin.PurchaseOrders.SelectSupplierPrompt")</label>
				<div class="col-md-6">
					<select asp-for="SupplierId" asp-items="Model.AvailableSuppliers" class="form-control" id="SupplierId">
						<option value="">@T("Admin.PurchaseOrders.SelectSupplierPrompt")</option>
					</select>
				</div>
			</div>

			<!-- Add Product Button -->
			<div class="form-group row">
				<div class="col-md-2 offset-md-2">
					<button type="button" id="add-product-btn" class="btn btn-primary">
						<i class="fas fa-plus"></i> @T("Admin.PurchaseOrders.AddProduct")
					</button>
				</div>
			</div>

			<!-- Selected Products Panel -->
			<div id="selected-products-container" class="form-group" style="display:none;">
				<div class="card">
					<div class="card-header">
						<h5>@T("Admin.PurchaseOrders.SelectedProducts")</h5>
					</div>
					<div class="card-body">
						<div class="table-responsive">
							<table class="table table-bordered table-hover" id="selected-products-table">
								<thead>
									<tr>
										<th>@T("Admin.Catalog.Products.Fields.Name")</th>
										<th>@T("Admin.Catalog.Products.Fields.Sku")</th>
										<th class="text-center">@T("Admin.Common.Remove")</th>
									</tr>
								</thead>
								<tbody id="selected-products-body">
									<!-- Dynamically populated -->
								</tbody>
							</table>
						</div>
						<div id="no-products-selected" class="alert alert-info">
							@T("Admin.PurchaseOrders.NoProductsSelected")
						</div>
					</div>
				</div>
			</div>

			<!-- Hidden inputs for selected products -->
			<div id="selected-products-inputs">
				<!-- Will be dynamically populated with hidden inputs -->
			</div>
		</div>
	</div>
</form>

@section Scripts {
	<script>
		// Store selected products
		var selectedProducts = [];

		$(document).ready(function () {
			// Initial UI state
			updateSelectedProductsUI();

			// Supplier selection change
			$('#SupplierId').change(function () {
				const supplierId = $(this).val();
				if (!supplierId) {
					$('#selected-products-container').hide();
					selectedProducts = [];
					updateSelectedProductsUI();
				} else {
					$('#add-product-btn').show();
				}
			});

			// Open product selection popup (using Add Product button)
			$('#add-product-btn').click(function() {
				const supplierId = $('#SupplierId').val();
				if (!supplierId) return;

				// Calculate centered position for popup
				const width = 800;
				const height = 600;
				const left = (window.screen.width / 2) - (width / 2);
				const top = (window.screen.height / 2) - (height / 2);

				// Open popup window with product selection
				const popupWindow = window.open(
					'@Url.Action("ProductSelectionPopup", "PurchaseOrderManager")?handler=ProductSelectionPopup&supplierId=' + supplierId,
					'ProductSelectionPopup',
					'width=' + width + ',height=' + height + ',top=' + top + ',left=' + left +
					',resizable=yes,scrollbars=yes,toolbar=no,location=no,directories=no,status=no,menubar=no'
				);

				// Set reference to parent window for communication
				popupWindow.opener = window;
				popupWindow.parentSelectedProducts = selectedProducts;

				return false;
			});

			// Form validation
			$('#create-form').submit(function (e) {
				if (selectedProducts.length === 0) {
					alert('@T("Admin.PurchaseOrders.SelectAtLeastOneProduct")');
					e.preventDefault();
					return false;
				}
				return true;
			});
		});

		// Function to receive products from popup
		function receiveSelectedProducts(products) {
			selectedProducts = products;
			updateSelectedProductsUI();
			$('#selected-products-container').show();
		}

		// Remove a product from selection
		function removeProduct(productId) {
			selectedProducts = selectedProducts.filter(p => p.id !== productId);
			updateSelectedProductsUI();
		}

		// Update the UI to reflect selected products
		function updateSelectedProductsUI() {
			// Clear existing inputs
			$('#selected-products-inputs').empty();

			// Update the table
			if (selectedProducts.length > 0) {
				$('#no-products-selected').hide();

				var html = '';
				selectedProducts.forEach(function(product) {
					html += '<tr>' +
						'<td>' + product.name + '</td>' +
						'<td>' + product.sku + '</td>' +
						'<td class="text-center">' +
						'<button type="button" class="btn btn-sm btn-danger" onclick="removeProduct(' + product.id + ')">' +
						'<i class="fas fa-times"></i>' +
						'</button>' +
						'</td>' +
						'</tr>';

					// Add hidden input for each product
					$('#selected-products-inputs').append(
						'<input type="hidden" name="SelectedProductIds" value="' + product.id + '" />'
					);
				});

				$('#selected-products-body').html(html);
				$('#selected-products-table').show();
			} else {
				$('#no-products-selected').show();
				$('#selected-products-table').hide();
				$('#selected-products-body').empty();
			}
		}
	</script>
}