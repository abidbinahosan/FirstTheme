@model Nop.Plugin.Misc.PurchaseOrderManager.Areas.Admin.Models.PurchaseOrderModel

<form asp-controller="PurchaseOrderManager" asp-action="Create" method="post" id="create-form">
	<div class="modal-header">
		<h5 class="modal-title">@T("Admin.PurchaseOrders.Create")</h5>
		<button type="button" class="close" data-dismiss="modal">&times;</button>
	</div>

	<div class="modal-body">
		<!-- Supplier Dropdown -->
		<div class="form-group">
			<nop-label asp-for="SupplierId" />
			<select asp-for="SupplierId" asp-items="Model.AvailableSuppliers" class="form-control" id="SupplierId">
				<option value="">@T("Admin.PurchaseOrders.SelectSupplierPrompt")</option>
			</select>
		</div>

		<!-- Product List Table -->
		<div id="product-list-container" class="form-group" style="display:none;">
			<label>@T("Admin.PurchaseOrders.Fields.Products")</label>
			<table class="table table-bordered table-hover dataTable" id="product-list-table" width="100%">
				<thead>
					<tr>
						<th>@T("Admin.Common.Select")</th>
						<th>@T("Admin.Catalog.Products.Fields.Name")</th>
					</tr>
				</thead>
				<tbody id="product-list-body">
					<!-- Product rows will be inserted here -->
				</tbody>
			</table>
		</div>
	</div>

	<div class="modal-footer">
		<button type="submit" class="btn btn-primary">@T("Admin.Common.Save")</button>
		<button type="button" class="btn btn-secondary" data-dismiss="modal">@T("Admin.Common.Cancel")</button>
	</div>
</form>

<script>
	$(document).on('change', '#SupplierId', function () {
		const supplierId = $(this).val();
		if (!supplierId) {
			$('#product-list-container').hide();
			$('#product-list-body').html('');
			if ($.fn.DataTable.isDataTable('#product-list-table')) {
				$('#product-list-table').DataTable().clear().destroy();
			}
			return;
		}

		$.get('@Url.Action("GetProductsBySupplier", "PurchaseOrderManager")', { supplierId: supplierId }, function (data) {
			// Step 1: Destroy existing DataTable if exists
			if ($.fn.DataTable.isDataTable('#product-list-table')) {
				$('#product-list-table').DataTable().clear().destroy();
			}

			// Step 2: Build rows
			let rows = '';
			data.forEach(function (product) {
				rows += `
					<tr>
						<td>
							<input type="checkbox" name="SelectedProductIds" value="${product.Value}" />
						</td>
						<td>${product.Text}</td>
					</tr>`;
			});

			// Step 3: Update table and reinitialize
			$('#product-list-body').html(rows);
			$('#product-list-table').DataTable({
				paging: false,
				searching: false,
				ordering: false,
				info: false
			});

			// Step 4: Show the product list
			$('#product-list-container').show();
		});
	});

	$('#create-form').submit(function (e) {
		e.preventDefault();
		var form = $(this);

		$.ajax({
			url: form.attr('action'),
			type: 'POST',
			data: form.serialize(),
			success: function (response) {
				if (response.success) {
					$('#createPurchaseOrderModal').modal('hide');
					$('#purchase-orders-grid').DataTable().ajax.reload();
				} else {
					alert('Something went wrong!');
				}
			}
		});
	});
</script>
