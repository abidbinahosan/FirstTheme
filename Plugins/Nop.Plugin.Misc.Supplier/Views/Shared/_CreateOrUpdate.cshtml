@model Nop.Plugin.Misc.Supplier.Domain.SupplierEntity
@using Nop.Plugin.Misc.Suppliers.Infrastructure
@await Html.PartialAsync("~/Plugins/Misc.Supplier/Views/Shared/_CreateOrUpdate.Display.cshtml", Model)
@await Html.PartialAsync("~/Plugins/Misc.Supplier/Views/Shared/_CreateOrUpdate.Info.cshtml", Model)
@await Html.PartialAsync("~/Plugins/Misc.Supplier/Views/Shared/_CreateOrUpdate.Notes.cshtml", Model)
@await Html.PartialAsync("~/Plugins/Misc.Supplier/Views/Shared/_CreateOrUpdate.Seo.cshtml", Model)

@{
	const string hideInfoBlockAttributeName = "SupplierPage.HideInfoBlock";
	var customer = await workContext.GetCurrentCustomerAsync();
	var hideInfoBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideInfoBlockAttributeName);

	const string hideDisplayBlockAttributeName = "SupplierPage.HideDisplayBlock";
	var hideDisplayBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideDisplayBlockAttributeName, defaultValue: true);

	const string hideSeoBlockAttributeName = "SupplierPage.HideSEOBlock";
	var hideSeoBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideSeoBlockAttributeName, defaultValue: true);

	const string hideSupplierNotesBlockAttributeName = "SupplierPage.HideNotesBlock";
	var hideSupplierNotesBlock = await genericAttributeService.GetAttributeAsync<bool>(customer, hideSupplierNotesBlockAttributeName, defaultValue: true);
}

<div asp-validation-summary="All"></div>
<input asp-for="Id" type="hidden" />

<section class="content">
	<div class="container-fluid">
		<div class="form-horizontal">
			<div class="row">
				<div class="col-md-12 clearfix">
					<div class="float-left">
						@await Component.InvokeAsync(typeof(SettingModeViewComponent), new { modeName = "supplier-advanced-mode" })
					</div>
				</div>
			</div>

			<nop-cards id="supplier-cards">
				<!-- Info Block -->
				<nop-card asp-name="supplier-info" asp-icon="fas fa-info" asp-title="@T("Admin.Suppliers.Info")" asp-hide-block-attribute-name="@hideInfoBlockAttributeName" asp-hide="@hideInfoBlock" asp-advanced="false">
					@await Html.PartialAsync("_CreateOrUpdate.Info", Model)
				</nop-card>

				<!-- Display Block -->
				<nop-card asp-name="supplier-display" asp-icon="fas fa-tv" asp-title="@T("Admin.Suppliers.Display")" asp-hide-block-attribute-name="@hideDisplayBlockAttributeName" asp-hide="@hideDisplayBlock" asp-advanced="true">
					@await Html.PartialAsync("_CreateOrUpdate.Display", Model)
				</nop-card>

				<!-- SEO Block -->
				<nop-card asp-name="supplier-seo" asp-icon="fas fa-magnifying-glass-plus" asp-title="@T("Admin.Common.SEO")" asp-hide-block-attribute-name="@hideSeoBlockAttributeName" asp-hide="@hideSeoBlock" asp-advanced="true">
					@await Html.PartialAsync("_CreateOrUpdate.Seo", Model)
				</nop-card>

				<!-- Notes Block, visible only for existing suppliers -->
				@if (Model.Id > 0)
				{
					<nop-card asp-name="supplier-products" asp-icon="fas fa-table-list" asp-title="@T("Admin.Suppliers.SupplierNotes")" asp-hide-block-attribute-name="@hideSupplierNotesBlockAttributeName" asp-hide="@hideSupplierNotesBlock" asp-advanced="true">
						@await Html.PartialAsync("_CreateOrUpdate.Notes", Model)
					</nop-card>
				}

				<!-- Custom Widget Zone -->
				@await Component.InvokeAsync(typeof(AdminWidgetViewComponent), new { widgetZone = SupplierWidgetZones.SupplierDetailsBlock, additionalData = Model })

			</nop-cards>
		</div>
	</div>
</section>
